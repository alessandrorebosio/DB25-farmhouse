# Generated by Django 5.2.4 on 2025-09-07 17:56

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(db_column='ID_servizio', primary_key=True, serialize=False)),
                ('price', models.DecimalField(db_column='prezzo', decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(db_column='tipo_servizio', max_length=32)),
                ('status', models.CharField(db_column='status', default='DISPONIBILE', max_length=15)),
            ],
            options={
                'verbose_name': 'Servizio',
                'verbose_name_plural': 'Servizi',
                'db_table': 'SERVIZIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(db_column='ID_prenotazione', primary_key=True, serialize=False)),
                ('booking_date', models.DateTimeField(db_column='data_prenotazione', null=True)),
            ],
            options={
                'verbose_name': 'Prenotazione',
                'verbose_name_plural': 'Prenotazioni',
                'db_table': 'PRENOTAZIONE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('username', models.CharField(db_column='username', max_length=32, primary_key=True, serialize=False)),
                ('password', models.CharField(db_column='password', max_length=255, null=True)),
                ('email', models.CharField(db_column='email', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Utente',
                'verbose_name_plural': 'Utenti',
                'db_table': 'UTENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeRoleHistory',
            fields=[
                ('role', models.CharField(db_column='ruolo', max_length=32)),
                ('start_date', models.DateField(db_column='data_inizio', primary_key=True, serialize=False)),
                ('end_date', models.DateField(db_column='data_fine', null=True)),
            ],
            options={
                'verbose_name': 'Ruolo storico dipendente',
                'verbose_name_plural': 'Ruoli storici dipendenti',
                'db_table': 'DIPENDENTE_RUOLO_STORICO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(db_column='ID_evento', primary_key=True, serialize=False)),
                ('seats', models.IntegerField(db_column='posti')),
                ('title', models.CharField(db_column='titolo', max_length=100)),
                ('description', models.TextField(db_column='descrizione')),
                ('date', models.DateField(db_column='data_evento')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventi',
                'db_table': 'EVENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hosts',
            fields=[
                ('hosting_date', models.DateField(db_column='data_ospitazione', primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Ospitazione',
                'verbose_name_plural': 'Ospitazioni',
                'db_table': 'OSPITA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(db_column='ID_ordine', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(db_column='data', null=True)),
            ],
            options={
                'verbose_name': 'Ordine',
                'verbose_name_plural': 'Ordini',
                'db_table': 'ORDINE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(db_column='ID_prodotto', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='nome', max_length=100)),
                ('price', models.DecimalField(db_column='prezzo', decimal_places=2, max_digits=8)),
            ],
            options={
                'verbose_name': 'Prodotto',
                'verbose_name_plural': 'Prodotti',
                'db_table': 'PRODOTTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(db_column='ID_pacchetto', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='nome', max_length=32)),
                ('description', models.TextField(db_column='descrizione')),
            ],
            options={
                'verbose_name': 'Pacchetto',
                'verbose_name_plural': 'Pacchetti',
                'db_table': 'PACCHETTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(db_column='ID_turno', primary_key=True, serialize=False)),
                ('day', models.CharField(db_column='giorno', max_length=10, null=True)),
                ('start_hour', models.TimeField(db_column='ora_inizio', null=True)),
                ('end_hour', models.TimeField(db_column='ora_fine', null=True)),
                ('description', models.CharField(db_column='descrizione', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turni',
                'db_table': 'TURNO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('cf', models.CharField(db_column='CF', max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='nome', max_length=50, null=True)),
                ('surname', models.CharField(db_column='cognome', max_length=50, null=True)),
                ('phone', models.CharField(db_column='telefono', max_length=20, null=True)),
                ('city', models.CharField(db_column='citta', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Persone',
                'db_table': 'PERSONA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(db_column='ID_recensione', primary_key=True, serialize=False)),
                ('service_type', models.CharField(db_column='tipo_servizio', max_length=32)),
                ('vote', models.IntegerField(db_column='voto')),
                ('description', models.TextField(db_column='descrizione')),
                ('review_date', models.DateTimeField(db_column='data_recensione', null=True)),
            ],
            options={
                'verbose_name': 'Recensione',
                'verbose_name_plural': 'Recensioni',
                'db_table': 'RECENSIONE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnimalActivity',
            fields=[
                ('id', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.service')),
                ('activity_code', models.CharField(db_column='cod_attivita', max_length=3, unique=True)),
                ('description', models.TextField(db_column='descrizione')),
            ],
            options={
                'verbose_name': 'Attività con animali',
                'verbose_name_plural': 'Attività con animali',
                'db_table': 'ATTIVITA_CON_ANIMALI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookingDetail',
            fields=[
                ('booking', models.OneToOneField(db_column='ID_prenotazione', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.booking')),
                ('service', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='core.service')),
                ('start_date', models.DateField(db_column='data_inizio')),
                ('end_date', models.DateField(db_column='data_fine')),
            ],
            options={
                'verbose_name': 'Dettaglio prenotazione',
                'verbose_name_plural': 'Dettagli prenotazione',
                'db_table': 'DETTAGLIO_PRENOTAZIONE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('package', models.OneToOneField(db_column='ID_pacchetto', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.package')),
                ('service', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='core.service')),
            ],
            options={
                'verbose_name': 'Composizione pacchetto',
                'verbose_name_plural': 'Composizioni pacchetto',
                'db_table': 'COMPOSTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playground',
            fields=[
                ('id', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.service')),
                ('playground_code', models.CharField(db_column='cod_campo', max_length=3, unique=True)),
                ('max_capacity', models.PositiveIntegerField(db_column='max_capienza', validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Campo da gioco',
                'verbose_name_plural': 'Campi da gioco',
                'db_table': 'CAMPO_DA_GIOCO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.service')),
                ('sunbed_code', models.CharField(db_column='cod_lettino', max_length=3, unique=True)),
            ],
            options={
                'verbose_name': 'Piscina',
                'verbose_name_plural': 'Piscine',
                'db_table': 'PISCINA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.service')),
                ('table_code', models.CharField(db_column='cod_tavolo', max_length=3, unique=True)),
                ('max_capacity', models.PositiveIntegerField(db_column='max_capienza', validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Ristorante',
                'verbose_name_plural': 'Ristoranti',
                'db_table': 'RISTORANTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.OneToOneField(db_column='ID_servizio', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.service')),
                ('room_code', models.CharField(db_column='cod_camera', max_length=3, unique=True)),
                ('max_capacity', models.PositiveIntegerField(db_column='max_capienza', validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Camera',
                'verbose_name_plural': 'Camere',
                'db_table': 'CAMERA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.user')),
                ('hire_date', models.DateField(db_column='data_assunzione', null=True)),
                ('termination_date', models.DateField(db_column='data_licenziamento', null=True)),
            ],
            options={
                'verbose_name': 'Dipendente',
                'verbose_name_plural': 'Dipendenti',
                'db_table': 'DIPENDENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enrolls',
            fields=[
                ('event', models.OneToOneField(db_column='ID_evento', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.event')),
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='core.user')),
                ('enroll_date', models.DateTimeField(db_column='data_iscrizione', null=True)),
                ('participants', models.IntegerField(db_column='partecipanti', default=1)),
            ],
            options={
                'verbose_name': 'Iscrizione',
                'verbose_name_plural': 'Iscrizioni',
                'db_table': 'iscrive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('package', models.OneToOneField(db_column='ID_pacchetto', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.package')),
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='core.user')),
                ('purchase_date', models.DateTimeField(db_column='data_acquisto', null=True)),
            ],
            options={
                'verbose_name': 'Acquisto',
                'verbose_name_plural': 'Acquisti',
                'db_table': 'ACQUISTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('order', models.OneToOneField(db_column='ID_ordine', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.order')),
                ('product', models.OneToOneField(db_column='ID_prodotto', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='core.product')),
                ('quantity', models.IntegerField(db_column='quantita')),
                ('unit_price', models.DecimalField(db_column='prezzo_unitario', decimal_places=2, max_digits=8)),
            ],
            options={
                'verbose_name': 'Dettaglio ordine',
                'verbose_name_plural': 'Dettagli ordine',
                'db_table': 'DETTAGLIO_ORDINE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Performs',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.employee')),
                ('shift', models.OneToOneField(db_column='ID_turno', on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='core.shift')),
                ('start_date', models.DateTimeField(db_column='data_inizio')),
            ],
            options={
                'verbose_name': 'Assegnazione turno',
                'verbose_name_plural': 'Assegnazioni turno',
                'db_table': 'SVOLGE',
                'managed': False,
            },
        ),
    ]
